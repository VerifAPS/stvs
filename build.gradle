/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Philipp' at '08.11.16 16:32' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'com.fifesoft:rsyntaxtextarea:2.6.0'
    compile 'org.apache.commons:commons-collections4:4.0'
    compile 'org.choco-solver:choco-solver:4.0.0'
    // This dependency does not exist yet (for some reason).
    //compile 'edu.kit.iti.formal:geteta:jar:0.2.2-beta'
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.6.10'
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.6'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        mainClassName = "edu.kit.iti.formal.stvs.STVSApplication"
    }
}

test {
    filter {
        includeTestsMatching "edu.kit.iti.formal.*"
    }
}
