SConstraint{
	globalConstraints=
		( >= n_0 3 )
		( <= n_0 3 )
		( >= n_1 1 )
		( <= n_1 1 )
		( >= n_2 1 )
		( <= n_2 1 )
		( implies ( > n_0 0 ) TRUE )
		( implies ( > n_0 1 ) TRUE )
		( implies ( > n_1 0 ) ( = A_1_0 5 ) )
		( implies ( > n_1 1 ) ( = A_1_1 5 ) )
		( implies ( > n_1 2 ) ( = A_1_2 5 ) )
		( implies ( > n_1 3 ) ( = A_1_3 5 ) )
		( implies ( > n_1 4 ) ( = A_1_4 5 ) )
		( >= ( + n_0 n_1 ) 4 )
		( implies ( > n_2 0 ) ( = A_2_0 A_2_-4 ) )
		( >= ( + n_0 n_1 ) 3 )
		( implies ( > n_2 1 ) ( = A_2_1 A_2_-3 ) )
		( >= ( + n_0 n_1 ) 2 )
		( implies ( > n_2 2 ) ( = A_2_2 A_2_-2 ) )
		( >= ( + n_0 n_1 ) 1 )
		( implies ( > n_2 3 ) ( = A_2_3 A_2_-1 ) )
		( >= ( + n_0 n_1 ) 0 )
		( implies ( > n_2 4 ) ( = A_2_4 A_2_0 ) )
		( impliesRule3 ( = n_1 0 ) ( = A_2_-1 A_1_-1 ) )
		( impliesRule3 ( = n_1 1 ) ( = A_2_-1 A_1_0 ) )
		( impliesRule3 ( = n_1 2 ) ( = A_2_-1 A_1_1 ) )
		( impliesRule3 ( = n_1 3 ) ( = A_2_-1 A_1_2 ) )
		( impliesRule3 ( = n_1 4 ) ( = A_2_-1 A_1_3 ) )
		( impliesRule3 ( = n_1 5 ) ( = A_2_-1 A_1_4 ) )
		( impliesRule3 ( = n_1 0 ) ( = A_2_-2 A_1_-2 ) )
		( impliesRule3 ( = n_1 1 ) ( = A_2_-2 A_1_-1 ) )
		( impliesRule3 ( = n_1 2 ) ( = A_2_-2 A_1_0 ) )
		( impliesRule3 ( = n_1 3 ) ( = A_2_-2 A_1_1 ) )
		( impliesRule3 ( = n_1 4 ) ( = A_2_-2 A_1_2 ) )
		( impliesRule3 ( = n_1 5 ) ( = A_2_-2 A_1_3 ) ),

	variableDefinitions=
		( declare-datatypes (  ) (  ) )
		( declare-const A_0_0 Int )
		( declare-const A_0_1 Int )
		( declare-const A_1_0 Int )
		( declare-const A_1_1 Int )
		( declare-const A_1_2 Int )
		( declare-const A_1_3 Int )
		( declare-const A_1_4 Int )
		( declare-const A_2_0 Int )
		( declare-const A_2_1 Int )
		( declare-const A_2_2 Int )
		( declare-const A_2_3 Int )
		( declare-const A_2_4 Int )
}
